# Generated by Django 4.1.3 on 2022-12-13 13:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import iiitdrive.model_fields
import iiitdrive.models
import iiitdrive.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', iiitdrive.model_fields.LowercaseEmailField(help_text='only IIITD emails', max_length=50, unique=True, validators=[iiitdrive.models.AllowlistEmailValidator(allowlist=['iiitd.ac.in'])], verbose_name='Email address')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Verified?')),
                ('email_verification_token', models.CharField(default=iiitdrive.utils.get_email_verification_token, max_length=32, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active?')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is Admin?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceFile',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(blank=True, null=True, upload_to=iiitdrive.models.change_filename)),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='UserFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_starred', models.BooleanField(default=False)),
                ('is_trashed', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='iiitdrive.resourcefile')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_files', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(related_name='shared_files', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', iiitdrive.model_fields.RestrictedFileField(blank=True, null=True, upload_to=iiitdrive.models.change_filename_with_user)),
                ('about_me', models.CharField(blank=True, default='', max_length=200)),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('link', models.URLField()),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socials', to='iiitdrive.userdetails')),
            ],
            options={
                'unique_together': {('user_details', 'name')},
            },
        ),
    ]
